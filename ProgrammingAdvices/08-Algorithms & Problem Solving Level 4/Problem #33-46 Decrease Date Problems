#include <iostream>
#include "MyLibrary.h"
using namespace std;
using namespace MyLibrary;
sDate DecreaseDateByOneDay(sDate Date) {
    if (IsFirstDayInMonth(Date)) {
        if (IsFirstMonthInYear(Date)) {
            Date.Month = 12;
            Date.Year--;
            Date.Day = NumberOfDaysInAMonth(Date.Month, Date.Year);
        }
        else {
            Date.Month--;
            Date.Day = NumberOfDaysInAMonth(Date.Month, Date.Year);
        }
    }
    else
        Date.Day--;
    return Date;
}
sDate DecreaseDateByXDays(sDate Date, short Days) {
    for (int i = 1; i <= Days; i++) {
        Date = DecreaseDateByOneDay(Date);
    }
    return Date;
}
sDate DecreaseDateByOneWeek(sDate Date) {
    for (int i = 1; i <= 7; i++) {
        Date = DecreaseDateByOneDay(Date);
    }
    return Date;
}
sDate DecreaseDateByXWeeks(sDate Date,short Weeks) {
    for (int i = 1; i <= Weeks; i++) {
        Date = DecreaseDateByOneWeek(Date);
    }
    return Date;
}
sDate DecreaseDateByOneMonth(sDate Date) {
    if (Date.Month == 1) {
        Date.Month = 12;
        Date.Year--;
    }
    else {
        Date.Month--;
    }
    short NumberOfDaysInTheCurrentMonth = NumberOfDaysInAMonth(Date.Month, Date.Year);
    if (Date.Day > NumberOfDaysInTheCurrentMonth) {

        Date.Day = NumberOfDaysInTheCurrentMonth;
    }
    return Date;
}
sDate DecreaseDateByXMonths(sDate Date, short Months) {
    for (int i = 1; i <= Months; i++) {
        Date = DecreaseDateByOneMonth(Date);
    }
    return Date;
}
sDate DecreaseDateByOneYear(sDate Date) {
    Date.Year--;
    return Date;
}
sDate DecreaseDateByXYears(sDate Date, short Years) {
    for (int i = 1; i <= Years; i++) {
        Date = DecreaseDateByOneYear(Date);
    }
    return Date;
}
sDate DecreaseDateByXYearsFaster(sDate Date, short Years) {
    Date.Year -= Years;
    return Date;
}
sDate DecreaseDateByOneDecade(sDate Date) {
    Date.Year -= 10;
    return Date;
}
sDate DecreaseDateByXDecades(sDate Date, short Decades) {
    for (int i = 1; i <= Decades; i++) {
        Date = DecreaseDateByOneDecade(Date);
    }
    return Date;
}
sDate DecreaseDateByXDecadesFaster(sDate Date, short Decades) {
    Date.Year -= Decades * 10;
    return Date;
}
sDate DecreaseDateByOneCentury(sDate Date) {
    Date.Year -= 100;
    return Date;
}
sDate DecreaseDateByOneMillennium(sDate Date) {
    Date.Year -= 1000;
    return Date;
}
int main()
{
    sDate Date1 = ReadFullDate();
    cout << "\nDate After: \n";
    Date1 = DecreaseDateByOneDay(Date1);
    cout << "\n01-Subtracting one day is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByXDays(Date1,10);
    cout << "\n02-Subtracting 10 days is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByOneWeek(Date1);
    cout << "\n03-Subtracting one week is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByXWeeks(Date1, 10);
    cout << "\n04-Subtracting 10 weeks is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByOneMonth(Date1);
    cout << "\n05-Subtracting one month is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year; 
    Date1 = DecreaseDateByXMonths(Date1, 5);
    cout << "\n06-Subtracting 5 months is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByOneYear(Date1);
    cout << "\n07-Subtracting one year is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByXYears(Date1, 10);
    cout << "\n08-Subtracting 10 Years is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByXYearsFaster(Date1, 10);
    cout << "\n09-Subtracting 10 Years (faster) is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByOneDecade(Date1);
    cout << "\n10-Subtracting one Decade is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByXDecades(Date1, 10);
    cout << "\n11-Subtracting 10 Decades is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByXDecadesFaster(Date1, 10);
    cout << "\n12-Subtracting 10 Decade (faster) is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByOneCentury(Date1);
    cout << "\n13-Subtracting One Century is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    Date1 = DecreaseDateByOneMillennium(Date1);
    cout << "\n14-Subtracting One Millennium is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
    system("pause>0");
    return 0;
}