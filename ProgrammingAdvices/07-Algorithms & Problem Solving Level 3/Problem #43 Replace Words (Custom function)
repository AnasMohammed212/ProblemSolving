#include <iostream>
#include<vector>
#include <string>
using namespace std;
vector<string> SplitString(string S1, string Delimiter) {
	vector<string> vString;
	short pos = 0;
	string sWord;
	while ((pos = S1.find(Delimiter)) != std::string::npos) {//nops means that there is no space 
		sWord = S1.substr(0, pos);//store the word from position 0 to first space
		if (sWord != "") {
			vString.push_back(sWord);

		}
		S1.erase(0, pos + Delimiter.length());
	}

	if (S1 != "") {
		vString.push_back(S1);

	}

	return vString;
}
string LowerAllString(string S1) {
	bool IsFirstLetter = true;
	for (int i = 0; i < S1.length(); i++) {
		S1[i] = tolower(S1[i]);

	}
	return S1;
}
string JoinString(vector<string> vString, string Delimiter) {
	string S1 = "";
	for (string& s : vString) {
		S1 = S1 + s + Delimiter;
	}
	return S1.substr(0, S1.length() - Delimiter.length());
}
string ReplaceWordInStringUsingSplit(string S1, string WordToReplace, string sReplaceTo, bool MatchCase = true) {
	vector<string> vString = SplitString(S1, " ");
	for (string& s : vString) {
		if (MatchCase) {
			if (s == WordToReplace) {
				s = sReplaceTo;
			}
		}
		else {
			if (LowerAllString(s) == LowerAllString(WordToReplace)) {
				s = sReplaceTo;
			}
		}
	}
	return JoinString(vString, " ");
}
int main() {
	string S1 = "Welcome to Jordan , Jordan is a nice country";
	string StringToReplace = "jordan"; string ReplaceTo = "USA";
	cout << "\nOriginal String:\n" << S1;
	cout << "\n\nReplace with match case: ";
	cout << "\n" << ReplaceWordInStringUsingSplit(S1, StringToReplace, ReplaceTo);
	cout << "\n\nReplace with dont match case: ";
	cout << "\n" << ReplaceWordInStringUsingSplit(S1, StringToReplace, ReplaceTo, false);
	system("pause>0");

}