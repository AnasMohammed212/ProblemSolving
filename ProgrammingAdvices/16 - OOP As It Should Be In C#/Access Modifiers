 using System;

namespace AccessModifiers
{
    class clsA
    {
        public int x1 = 10;
        private int x2 = 20;
        protected int x3 = 30;

       public  int fun1()
        {
            return 100;
        }

        private int fun2()
        {
            return 200;
        }

        protected  int fun3()
        {
            return 300;
        }
    }

    class clsB  clsA
    { 
        public int fun4()
        {
            return x1 + x3 ;
        }
    
    }


        internal class Program
    {
        static void Main(string[] args)
        {
            Create object from class
            clsA A = new clsA();
            Console.WriteLine(All public members are accessable);
            Console.WriteLine(x1={0} , A.x1);
            Console.WriteLine(result of fun1={0}, A.fun1());

            Console.WriteLine(x2={0}, A.x2);

             Console.WriteLine(x3={0}, A.x3);

             Console.WriteLine(result of fun2={0}, A.fun2());

             Console.WriteLine(result of fun3={0}, A.fun3());

            clsB B = new clsB();
            Console.WriteLine(nObjects from class B expose all public members from the base class);
            Console.WriteLine(x1={0}, B.x1);
            Console.WriteLine(result of fun1={0}, B.fun1());

            
            Console.WriteLine(x2={0}, B.x2);
            Console.WriteLine(result of fun1={0}, B.fun2());

             Console.WriteLine(x3={0}, B.x3);
            Console.WriteLine(result of fun3={0}, B.fun3());

            Console.ReadKey();
        }
    }
}
